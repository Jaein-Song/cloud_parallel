#!/bin/bash
## CONFIGURATION AND INITIATION FILE
## MADE BY J.I.Song, NIMS, 2017
## THIS FILE MUST BE MODIFIED BEFORE USE THE ENTIRE PROGRAM IN ANY OTHER ENVIRONMENT.

## SET BASIC PATHS
export current_dir=/home/jaein/cloud_nims		    			# Fix the current directory
export CLD_dir=/data1/CLD_258/hmbprodat            	    			# Path of input binary files
export CF_dir=/data2/CLD_PP/CLD_258/hmbprodat/CFRADIAL  			# Path of output CFradial files
export ceil_dir=/home/jaein/wavebkup/data/Jaein/boseong/ceil              			# Path of Ceilometer files
export ceil_cdf_dir=/home/jaein/cloud_nims       			# Path of output netCDF Ceilometer files
export y_u_date=`date -u -d yesterday +%Y%m%d`          			# Get the UTC date of yesterday
export t_u_date=`date -u -d now +%Y%m%d`                			# Get the UTC date of today
export NETCDF=/usr/local/netcdf/444_gcc481			        		# Path of netCDF4 : its library path must have both "libnetcdf and libnetcdff" 
export Fig_dir=/data2/CLD_258/hmbprodat/CFRADIAL/Figs  				# Path of output Figure png files
export Fig_dir_CL=/home/jaein/cloud_nims  				# Path of output Figure png files
export web_dir=$Fig_dir/CLD1                            			# Path of webpage image directory
export NCARG_ROOT=/usr/local/ncl_ncarg/621/gcc447
export PATH=$PATH:$NCARG_ROOT
export ncl=$NCARG_ROOT/bin/ncl

##SET file date option
# use wildcard(*) if you want to excute for all date
export ex_yr='2016'
export ex_mn='01'
export ex_da='01'

##COMPILE AND EXECUTE SETTING
export LD_LIBRARY_PATH=$NETCDF/lib:$LD_LIBRARY_PATH	     			# Modify LD_LIBRARY_PATH to use netcdf library in gfortran
export extend=png					        		# extension of figure
export FC=gfortran					        		# Set Fortran Compiler (Need Fortran 2003)
export options1='-fbounds-check -ffree-line-length-512'				# Set Fortran Compiler options (selectable)
#export options='-fbounds-check -g -ffree-line-length-512'						# Set Fortran Compiler options (selectable)
export FC_NC_lib='-I'$NETCDF'/include -L'$NETCDF'/lib -lnetcdf -lnetcdff'	# NetCDF library PATH for compiler option
export num_cpu=1								# Number of CPUs to use 

##FILE SETTING
export CLD_flen=45								# Time coverage of file in seond (Cloud Radar)
export CLD_fcount=500								# Numbers of measurement in file (Cloud Radar)
export CLD_tres=90								# Temporal resolution of measurement in ms (Cloud Radar)


##SWITCH 
#Flag for turn on/off each progress. set if you want to do: 1, not:0
export flag_refn=0								# Refine file directories
export flag_ceil=1								# Convert ceilometer data files from ASCII to netCDF
export flag_b2n=0								# Convert cloud radar data files from Binary to netCDF
export flag_day=0								# Merge daily cloud radar data 
export flag_plot=0								# Plot daily cloud radar data
export flag_web=0								# Copy or modify path for web display

#Flag for diunal QC file1 for produce, 0 for not produce
export flag_noqco=0								# no QCed and Unfiltered (D)
export flag_noqcf=0								# no QCed and Filtered	(C)
export flag_qc14o=0								# QC14 algorithm
export flag_qc15o=0								# QC15 algorithm
export flag_qc17o=0								# QC17 algorithm without ceilometer 
export flag_qc172o=1								# QC17 algorithm with ceilometer
export flag_overwrite=1								# Overwrite flag overwrite if this flag is 1
export time_intv=120								# time resolution of daily CLD in second 

export dupl=2
if [ $flag_overwrite -lt 1 ]; then
	export dupl=1
fi

##Find the oldest file date
#filelist=(`ls -d $CLD_dir/BASEDATD/20****/`)					
#oldestfile=${filelist[0]##/*/}
#export sy=${oldestfile:0:4} 
#export sm=${oldestfile:4:2}




